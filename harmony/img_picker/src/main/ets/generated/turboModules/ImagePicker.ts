/**
 * This code was generated by "react-native codegen-lib-harmony"
 */

import { Tag } from "@rnoh/react-native-openharmony/ts"

export namespace ImagePicker {
  export const NAME = 'ImagePicker' as const

  export type CustomButtonOptions = {name?: string, title?: string}
  
  export type StorageOptions = {skipBackup?: boolean, path?: string, cameraRoll?: boolean, waitUntilSaved?: boolean}
  
  export type Options = {title?: string, cancelButtonTitle?: string, takePhotoButtonTitle?: string, chooseFromLibraryButtonTitle?: string, customButtons?: CustomButtonOptions[], cameraType?: string, mediaType?: string, maxWidth?: number, maxHeight?: number, quality?: number, videoQuality?: string, durationLimit?: number, rotation?: number, allowsEditing?: boolean, noData?: boolean, storageOptions?: StorageOptions}
  
  export type Response = {customButton: string, didCancel: boolean, error: string, data: string, uri: string, origURL?: string, isVertical: boolean, width: number, height: number, fileSize: number, type?: string, fileName?: string, path?: string, latitude?: number, longitude?: number, timestamp?: string}
  
  export interface Spec {
    showImagePicker(options: Options, callback: (response: Response) => void): void;
  
    showImagePicker(callback: (response: Response) => void): void;
  
    launchCamera(options: Options, callback: (response: Response) => void): void;
  
    launchCamera(callback: (response: Response) => void): void;
  
    launchImageLibrary(options: Options, callback: (response: Response) => void): void;
  
    launchImageLibrary(callback: (response: Response) => void): void;
  
    canRecordVideos(): void;
  
    canUseCamera(): void;
  
    openCameraDialog(): void;
  
    openSelectDialog(): void;
  
  }
}
